// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sign in form test renders and matches our snapshot 1`] = `
<MemoryRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "764ckt",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "764ckt",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <SignInPage
      handleLoginInputChange={[MockFunction]}
      handleLoginSubmitForm={[MockFunction]}
      loginPutErrorMessage={null}
      loginSuccessMessage={null}
    >
      <main
        className="main-content"
      >
        <div
          className="container"
        >
          <div
            className="row"
          >
            <div
              className="col-md-12 col-sm-12 com-xs-12"
            >
              <div
                className="main-login-page"
              >
                <h2>
                  Sign in to your account
                </h2>
                <form
                  onSubmit={[MockFunction]}
                >
                  <div
                    className="form-input-division"
                  >
                    <input
                      className="input-default form-text-input"
                      name="email"
                      onChange={[MockFunction]}
                      placeholder="Email"
                      required={true}
                      type="email"
                    />
                  </div>
                  <div
                    className="form-input-division"
                  >
                    <input
                      className="test input-default form-text-input"
                      id="password"
                      name="password"
                      onChange={[MockFunction]}
                      placeholder="Password"
                      required={true}
                      type="password"
                    />
                  </div>
                  <div
                    className="form-input-division"
                  >
                    <button
                      className="btn btn-primary input-default form-btn"
                      type="submit"
                    >
                      Sign In
                    </button>
                  </div>
                  <div
                    className="form-input-division"
                  >
                    <Link
                      className="nav-link"
                      replace={false}
                      to="/reset"
                    >
                      <a
                        className="nav-link"
                        href="/reset"
                        onClick={[Function]}
                      >
                        Forgot password?
                      </a>
                    </Link>
                  </div>
                  <hr />
                  <div
                    className="form-input-division"
                  >
                    <Link
                      className="nav-link"
                      replace={false}
                      to="/"
                    >
                      <a
                        className="nav-link"
                        href="/"
                        onClick={[Function]}
                      >
                        You don't have an account?
                      </a>
                    </Link>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </main>
    </SignInPage>
  </Router>
</MemoryRouter>
`;
